//
//  ViewController.m
//  testIMSDK
//
//  Created by HCF on 15/10/21.
//  Copyright (c) 2015年 HCF. All rights reserved.
//

#import "ViewController.h"
#import "QMChatRoomViewController.h"
#import "QMChatTileView.h"

#import "QMChatRoomGuestBookViewController.h"
#import <IMSDK/IMSDK-Swift.h>
#import <IMSDK/IMSDK.h>
#import "AppDelegate.h"

@interface ViewController () {
    UITextView *_textView; // SDK介绍
    UIButton *_customButton; // 客服登陆按钮
    UIButton *_appKeyButton; // appKey设置按钮(有默认值)
    UIActivityIndicatorView *_indicatorView; // 活动指示器
    BOOL _isFirstClick; // 判断点击状态
    BOOL _isPushed; // 判断跳转状态
    
    QMChatTileView *_titleView;
}

@end

@implementation ViewController

- (instancetype)init {
    self = [super init];
    if (self) {
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(loginSuccess:) name:CUSTOM_LOGIN_SUCCEED object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(loginFaile:) name:CUSTOM_LOGIN_ERROR_USER object:nil];
    }
    return self;
}

- (void)viewWillAppear:(BOOL)animated {
    _isPushed = NO;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    _isFirstClick = YES;
    
    _titleView = [[QMChatTileView alloc] initWithFrame: CGRectMake(0, 0, 150, 44)];
    self.navigationItem.titleView = _titleView;
    _titleView.nameLabel.text = @"Objective-C";
    _titleView.stateInfoLabel.text = @"等待登陆";
            
    self.navigationController.navigationBar.translucent = NO;
    self.navigationController.navigationBar.titleTextAttributes = @{NSForegroundColorAttributeName:[UIColor whiteColor],NSFontAttributeName: [UIFont systemFontOfSize:22]};
    self.navigationController.navigationBar.barTintColor =  [UIColor colorWithRed:32/255.0 green:218/255.0 blue:155/255.0 alpha:0.8];
    self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
    
    [self createUI];
}

- (void)viewWillDisappear:(BOOL)animated {
    _isPushed = YES;
}

#pragma mark - 注册appKey
- (void)clickAction {
    NSLog(@"点击客服");
    if (_isFirstClick == NO) {
        return;
    }
    _isFirstClick = NO;
    [_indicatorView startAnimating];
    
    // userId  只能使用  数字 字母(包括大小写) 下划线
    // 74b06730-ad68-11e5-8dbd-b1016aac54bd
    // ba995ec0-a57c-11e6-80ad-ed126d59818a
    // 89a665c0-97d5-11e5-9294-3da2499d1ef2
    [QMConnect registerSDKWithAppKey:@"4db84e50-2b93-11e6-8e31-2589dcc314d2" userName:@"iOS测试" userId:@"ccb55"];
}

#pragma mark - 登陆成功状态
- (void)loginSuccess:(NSNotification *)sender {
    NSLog(@"连接成功");
    if (_isPushed == YES) {
        return;
    }
    _titleView.stateInfoLabel.text = @"登陆成功";
    [_indicatorView stopAnimating];
    
    [QMConnect sdkGetPeers:^(NSArray * _Nonnull peerArray) {
        dispatch_async(dispatch_get_main_queue(), ^{
            NSArray *peers = peerArray;
            if (peers.count == 1 && peers.count != 0) {
                [self showChatRoomViewController:[peers.firstObject objectForKey:@"id"]];
            }else {
                UIAlertController *alertController = [UIAlertController alertControllerWithTitle:nil message:@"选择您咨询的类型或业务部门(对应技能组)" preferredStyle:UIAlertControllerStyleAlert];
                UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
                    
                }];
                [alertController addAction:cancelAction];
                for (NSDictionary *index in peers) {
                    UIAlertAction *surelAction = [UIAlertAction actionWithTitle:[index objectForKey:@"name"] style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
                        
                        [self showChatRoomViewController:[index objectForKey:@"id"]];
                    }];
                    [alertController addAction:surelAction];
                }
                [self presentViewController:alertController animated:YES completion:nil];
            }
            _isFirstClick = YES;
        });
    } failureBlock:^{
        _isFirstClick = YES;
    }];
}

#pragma mark - 登陆失败状态
- (void)loginFaile:(NSNotification *)sender {
    NSLog(@"111%@",sender.object);
    _titleView.stateInfoLabel.text = @"登陆失败";
    _isFirstClick = YES;
    [_indicatorView stopAnimating];
}

#pragma mark - 跳转聊天界面
- (void)showChatRoomViewController:(NSString *)peerId {
    QMChatRoomViewController *_chatRoomViewController = [[QMChatRoomViewController alloc] init];
    _chatRoomViewController.peerId = peerId;
    _chatRoomViewController.isPush = NO;
    [self.navigationController pushViewController:_chatRoomViewController animated:YES];
}

- (void)createUI {
    _customButton = [UIButton buttonWithType:UIButtonTypeSystem];
    _customButton.frame = CGRectMake((kScreenWidth-120)/2, kScreenHeight-130, 120, 40);
    [_customButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    _customButton.titleLabel.font = [UIFont systemFontOfSize:20 weight:2];
    [_customButton setTitle:@"联系客服" forState:UIControlStateNormal];
    _customButton.layer.borderColor = [[UIColor blackColor] CGColor];
    _customButton.layer.borderWidth = 0.5;
    _customButton.layer.cornerRadius = 5;
    _customButton.layer.masksToBounds = YES;
    [_customButton addTarget:self action:@selector(clickAction) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:_customButton];
    
    _textView = [[UITextView alloc] init];
    _textView.layer.borderColor = [[UIColor blackColor] CGColor];
    _textView.layer.borderWidth = 0.5;
    _textView.frame = CGRectMake(5, 5, kScreenWidth-10, kScreenHeight-150);
    _textView.font = [UIFont systemFontOfSize:16];
    _textView.editable = NO;
    _textView.text = [self newVersionBoard];
    [self.view addSubview:_textView];
    
    // 建议使用网络指示器
    _indicatorView = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
    _indicatorView.layer.cornerRadius = 5;
    _indicatorView.layer.masksToBounds = YES;
    _indicatorView.frame = CGRectMake((kScreenWidth-100)/2, (kScreenHeight-100)/2-64, 100, 100);
    _indicatorView.backgroundColor = [UIColor blackColor];
    _indicatorView.color = [UIColor whiteColor];
    _indicatorView.alpha = 0.7;
    [self.view addSubview:_indicatorView];
}

- (BOOL)canBecomeFirstResponder {
    return NO;
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (NSString *)newVersionBoard {
    NSArray * updateBoards = @[
                               @{
                                   @"version":@"1.5.0",
                                   @"date":@"2016-11-23",
                                   @"content":@[
                                           @"1、新增iframe消息类型"
                                           ]
                                   },
                               @{
                                   @"version" :@"1.4.0",
                                   @"date"     :@"2016-11-11",
                                   @"content"  :@[
                                           @"1、支持xcode8.1",
                                           ]
                                   },
                               @{
                                   @"version"  :@"1.3.0",
                                   @"date"     :@"2016-09-06",
                                   @"content"  :@[
                                           @"1、新增文件消息类型，支持文件消息发送，文件下载",
                                           @"2、新增图片消息发送接口（参数为本地图片相对路径）"
                                           ]
                                   },
                               @{
                                   @"version"  :@"1.2.2",
                                   @"date"     :@"2016-06-20",
                                   @"content"  :@[
                                           @"1、更新七牛SDK，支持IPv6",
                                           @"2、对特殊字符进行处理",
                                           @"3、使用IMSDK依赖Qiniu，FMDB第三方库"
                                           ]
                                   },
                               @{
                                   @"version"  :@"1.2.1",
                                   @"date"     :@"2016-04-25",
                                   @"content"  :@[
                                           @"1、SDK支持iOS9.3",
                                           @"2、修复SDK表情库与后台不匹配",
                                           @"3、SDK支持真机和模拟器合并包"
                                           ]
                                   },
                               @{
                                   @"version"  :@"1.2.0",
                                   @"date"     :@"2016-03-14",
                                   @"content"  :@[
                                           @"1、SDK新增删除一条数据库信息接口(只能删除本地数据库消息)",
                                           @"2、SDK新增满意度评价推送(通知方式新增一条本地消息，消息内容为获取的本地评价信息)",
                                           @"3、SDK新增多技能组获取接口(开始会话前可以选择相应的技能组进行咨询)",
                                           @"4、SDK新增获取满意度调查信息接口(异步请求满意度调查选项,移除之前的获取本地满意度调查接口,用户可根据获取到的数据自行缓存)",
                                           @"5、SDK新增设置服务器地址接口(自建客户可设置此接口,连接本地服务器)"
                                           ]
                                   },
                               @{
                                   @"version"  :@"1.1.1",
                                   @"date"     :@"2016-02-03",
                                   @"content"  :@[
                                           @"1、SDK新增注销接口(注销后、断掉TCP链接、后台可以得到客户离开聊天窗口的通知)"
                                           ]
                                   },
                               @{
                                   @"version"  :@"1.1.0",
                                   @"date"     :@"2015-12-22",
                                   @"content"  :@[
                                           @"1、修复已知BUG",
                                           @"2、SDK新增接收图片消息"
                                           ]
                                   }
                               ];
    
    NSString * string = @"";
    for (NSDictionary * update in updateBoards) {
        NSString * str = @"";
        for (NSString * content in [update objectForKey:@"content"]) {
            str = [str stringByAppendingString:[NSString stringWithFormat:@"%@\n",content]];
        }
        NSString * tempString = [NSString stringWithFormat:@"版本更新%@ : %@\n%@",[update objectForKey:@"version"],[update objectForKey:@"date"],str];
        string = [string stringByAppendingString:[NSString stringWithFormat:@"%@\n",tempString]];
    }
    return string;
}

@end
